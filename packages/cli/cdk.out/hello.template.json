{
  "Resources": {
    "hellovpcBBF54E31": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello/hello-vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/Resource"
      }
    },
    "hellovpcPublicSubnet1SubnetE2F7EBD6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet1/Subnet"
      }
    },
    "hellovpcPublicSubnet1RouteTableB450D1ED": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet1/RouteTable"
      }
    },
    "hellovpcPublicSubnet1RouteTableAssociation81D3300E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "hellovpcPublicSubnet1RouteTableB450D1ED"
        },
        "SubnetId": {
          "Ref": "hellovpcPublicSubnet1SubnetE2F7EBD6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "hellovpcPublicSubnet1DefaultRouteC37F4DE4": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "hellovpcPublicSubnet1RouteTableB450D1ED"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "hellovpcIGW3B8FA606"
        }
      },
      "DependsOn": [
        "hellovpcVPCGW50942344"
      ],
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet1/DefaultRoute"
      }
    },
    "hellovpcPublicSubnet1EIP531B9481": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet1/EIP"
      }
    },
    "hellovpcPublicSubnet1NATGateway99C1AB66": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "hellovpcPublicSubnet1EIP531B9481",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "hellovpcPublicSubnet1SubnetE2F7EBD6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet1/NATGateway"
      }
    },
    "hellovpcPublicSubnet2SubnetF37A14B9": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet2/Subnet"
      }
    },
    "hellovpcPublicSubnet2RouteTable86A5980D": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet2/RouteTable"
      }
    },
    "hellovpcPublicSubnet2RouteTableAssociation7E36339F": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "hellovpcPublicSubnet2RouteTable86A5980D"
        },
        "SubnetId": {
          "Ref": "hellovpcPublicSubnet2SubnetF37A14B9"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "hellovpcPublicSubnet2DefaultRouteA2E44C9E": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "hellovpcPublicSubnet2RouteTable86A5980D"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "hellovpcIGW3B8FA606"
        }
      },
      "DependsOn": [
        "hellovpcVPCGW50942344"
      ],
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet2/DefaultRoute"
      }
    },
    "hellovpcPublicSubnet2EIPFFA7BD09": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet2/EIP"
      }
    },
    "hellovpcPublicSubnet2NATGateway9BB6ECFF": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "hellovpcPublicSubnet2EIPFFA7BD09",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "hellovpcPublicSubnet2SubnetF37A14B9"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PublicSubnet2/NATGateway"
      }
    },
    "hellovpcPrivateSubnet1SubnetC101D458": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PrivateSubnet1/Subnet"
      }
    },
    "hellovpcPrivateSubnet1RouteTableE25227CA": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PrivateSubnet1/RouteTable"
      }
    },
    "hellovpcPrivateSubnet1RouteTableAssociationD5D84117": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "hellovpcPrivateSubnet1RouteTableE25227CA"
        },
        "SubnetId": {
          "Ref": "hellovpcPrivateSubnet1SubnetC101D458"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "hellovpcPrivateSubnet1DefaultRouteDD46BF0A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "hellovpcPrivateSubnet1RouteTableE25227CA"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "hellovpcPublicSubnet1NATGateway99C1AB66"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "hellovpcPrivateSubnet2Subnet76CCDC3B": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PrivateSubnet2/Subnet"
      }
    },
    "hellovpcPrivateSubnet2RouteTable8337BE29": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello/hello-vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PrivateSubnet2/RouteTable"
      }
    },
    "hellovpcPrivateSubnet2RouteTableAssociation505B8F7A": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "hellovpcPrivateSubnet2RouteTable8337BE29"
        },
        "SubnetId": {
          "Ref": "hellovpcPrivateSubnet2Subnet76CCDC3B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "hellovpcPrivateSubnet2DefaultRoute31C8FB74": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "hellovpcPrivateSubnet2RouteTable8337BE29"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "hellovpcPublicSubnet2NATGateway9BB6ECFF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "hellovpcIGW3B8FA606": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "hello/hello-vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/IGW"
      }
    },
    "hellovpcVPCGW50942344": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        },
        "InternetGatewayId": {
          "Ref": "hellovpcIGW3B8FA606"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-vpc/VPCGW"
      }
    },
    "helloecsD9D6B0EC": {
      "Type": "AWS::ECS::Cluster",
      "Metadata": {
        "aws:cdk:path": "hello/hello-ecs/Resource"
      }
    },
    "helloefssecuritygroup45D1D008": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "hello/hello-efs-security-group",
        "GroupName": "hello-efs-security-group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-efs-security-group/Resource"
      }
    },
    "helloefssecuritygroupfromhelloFargateServiceSecurityGroup242957E420492E732E86": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "from helloFargateServiceSecurityGroup242957E4:2049",
        "FromPort": 2049,
        "GroupId": {
          "Fn::GetAtt": [
            "helloefssecuritygroup45D1D008",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "FargateServiceSecurityGroup262B61DD",
            "GroupId"
          ]
        },
        "ToPort": 2049
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-efs-security-group/from helloFargateServiceSecurityGroup242957E4:2049"
      }
    },
    "helloefs8A45A9C7": {
      "Type": "AWS::EFS::FileSystem",
      "Properties": {
        "Encrypted": true,
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "hello-efs"
          }
        ]
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "hello/hello-efs/Resource"
      }
    },
    "helloefsEfsMountTarget1646C4184": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "helloefs8A45A9C7"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "helloefssecuritygroup45D1D008",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "hellovpcPrivateSubnet1SubnetC101D458"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-efs/EfsMountTarget1"
      }
    },
    "helloefsEfsMountTarget2933818E7": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": {
          "Ref": "helloefs8A45A9C7"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "helloefssecuritygroup45D1D008",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "hellovpcPrivateSubnet2Subnet76CCDC3B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/hello-efs/EfsMountTarget2"
      }
    },
    "shared6AC20809": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "action": "createAccessPoint",
          "parameters": {
            "FileSystemId": {
              "Ref": "helloefs8A45A9C7"
            },
            "PosixUser": {
              "Gid": 1000,
              "Uid": 1000
            },
            "RootDirectory": {
              "CreationInfo": {
                "OwnerGid": 1000,
                "OwnerUid": 1000,
                "Permissions": 755
              },
              "Path": "/shared"
            },
            "Tags": [
              {
                "Key": "Name",
                "Value": "shared"
              }
            ]
          },
          "physicalResourceId": {
            "responsePath": "AccessPointArn"
          },
          "service": "EFS"
        },
        "Update": {
          "action": "createAccessPoint",
          "parameters": {
            "FileSystemId": {
              "Ref": "helloefs8A45A9C7"
            },
            "PosixUser": {
              "Gid": 1000,
              "Uid": 1000
            },
            "RootDirectory": {
              "CreationInfo": {
                "OwnerGid": 1000,
                "OwnerUid": 1000,
                "Permissions": 755
              },
              "Path": "/shared"
            },
            "Tags": [
              {
                "Key": "Name",
                "Value": "shared"
              }
            ]
          },
          "physicalResourceId": {
            "responsePath": "AccessPointArn"
          },
          "service": "EFS"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "hello/shared/Resource/Default"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "elasticfilesystem:CreateAccessPoint",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ecs:RegisterTaskDefinition",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FargateServiceTaskDefExecutionRole9194820E",
                  "Arn"
                ]
              }
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FargateServiceTaskDefTaskRole8CDCF85E",
                  "Arn"
                ]
              }
            },
            {
              "Action": "elasticfilesystem:PutFileSystemPolicy",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3BucketA67797D4"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3VersionKeyD2C3FB42"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3VersionKeyD2C3FB42"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
      ],
      "Metadata": {
        "aws:cdk:path": "hello/AWS679f53fac002430cb0da5b7982bd2287/Resource",
        "aws:asset:path": "asset.f883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50cc",
        "aws:asset:property": "Code"
      }
    },
    "FargateServiceLBB353E155": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "FargateServiceLBSecurityGroup5F444C78",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "hellovpcPublicSubnet1SubnetE2F7EBD6"
          },
          {
            "Ref": "hellovpcPublicSubnet2SubnetF37A14B9"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "hellovpcPublicSubnet1DefaultRouteC37F4DE4",
        "hellovpcPublicSubnet2DefaultRouteA2E44C9E"
      ],
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/LB/Resource"
      }
    },
    "FargateServiceLBSecurityGroup5F444C78": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB helloFargateServiceLB11686C5E",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/LB/SecurityGroup/Resource"
      }
    },
    "FargateServiceLBSecurityGrouptohelloFargateServiceSecurityGroup242957E48068CAD804": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "FargateServiceLBSecurityGroup5F444C78",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "FargateServiceSecurityGroup262B61DD",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/LB/SecurityGroup/to helloFargateServiceSecurityGroup242957E4:80"
      }
    },
    "FargateServiceLBPublicListener4B4929CA": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "FargateServiceLBPublicListenerECSGroupBE57E081"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "FargateServiceLBB353E155"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/LB/PublicListener/Resource"
      }
    },
    "FargateServiceLBPublicListenerECSGroupBE57E081": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "FargateServiceTaskDefTaskRole8CDCF85E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/TaskDef/TaskRole/Resource"
      }
    },
    "FargateServiceTaskDef940E3A80": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": "coderaiser/cloudcmd:14.3.10-alpine",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "FargateServiceTaskDefwebLogGroup71FAF541"
                },
                "awslogs-stream-prefix": "FargateService",
                "awslogs-region": {
                  "Ref": "AWS::Region"
                }
              }
            },
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 80,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "256",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "FargateServiceTaskDefExecutionRole9194820E",
            "Arn"
          ]
        },
        "Family": "helloFargateServiceTaskDefDC47C72D",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "FargateServiceTaskDefTaskRole8CDCF85E",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/TaskDef/Resource"
      }
    },
    "FargateServiceTaskDefwebLogGroup71FAF541": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/TaskDef/web/LogGroup/Resource"
      }
    },
    "FargateServiceTaskDefExecutionRole9194820E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/TaskDef/ExecutionRole/Resource"
      }
    },
    "FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FargateServiceTaskDefwebLogGroup71FAF541",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2",
        "Roles": [
          {
            "Ref": "FargateServiceTaskDefExecutionRole9194820E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/TaskDef/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "FargateServiceECC8084D": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "helloecsD9D6B0EC"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 80,
            "TargetGroupArn": {
              "Ref": "FargateServiceLBPublicListenerECSGroupBE57E081"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "FargateServiceSecurityGroup262B61DD",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "hellovpcPrivateSubnet1SubnetC101D458"
              },
              {
                "Ref": "hellovpcPrivateSubnet2Subnet76CCDC3B"
              }
            ]
          }
        },
        "PlatformVersion": "1.4.0",
        "TaskDefinition": {
          "Fn::GetAtt": [
            "FargateServiceCustomFargateTaskDefinition8C80D746",
            "taskDefinition.taskDefinitionArn"
          ]
        }
      },
      "DependsOn": [
        "FargateServiceLBPublicListenerECSGroupBE57E081",
        "FargateServiceLBPublicListener4B4929CA"
      ],
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/Service/Service"
      }
    },
    "FargateServiceSecurityGroup262B61DD": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "hello/FargateService/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "hellovpcBBF54E31"
        }
      },
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/Service/SecurityGroup/Resource"
      }
    },
    "FargateServiceSecurityGroupfromhelloFargateServiceLBSecurityGroup2F52912980BA84281F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "FargateServiceSecurityGroup262B61DD",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "FargateServiceLBSecurityGroup5F444C78",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/Service/SecurityGroup/from helloFargateServiceLBSecurityGroup2F529129:80"
      }
    },
    "FargateServiceCustomFargateTaskDefinition8C80D746": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "action": "registerTaskDefinition",
          "outputPath": "taskDefinition.taskDefinitionArn",
          "parameters": {
            "containerDefinitions": [
              {
                "command": [
                  "--no-keys-panel",
                  "--one-file-panel",
                  "--port=80",
                  "--root=/files"
                ],
                "essential": "TRUE:BOOLEAN",
                "image": "coderaiser/cloudcmd:14.3.10-alpine",
                "logConfiguration": {
                  "logDriver": "awslogs",
                  "options": {
                    "awslogs-group": {
                      "Ref": "FargateServiceTaskDefwebLogGroup71FAF541"
                    },
                    "awslogs-stream-prefix": "FargateService",
                    "awslogs-region": {
                      "Ref": "AWS::Region"
                    }
                  }
                },
                "memory": 512,
                "mountPoints": [
                  {
                    "containerPath": "/shared",
                    "sourceVolume": "shared"
                  }
                ],
                "name": "web",
                "portMappings": [
                  {
                    "containerPort": 80,
                    "hostPort": 80,
                    "protocol": "tcp"
                  }
                ]
              }
            ],
            "cpu": "256",
            "executionRoleArn": {
              "Fn::GetAtt": [
                "FargateServiceTaskDefExecutionRole9194820E",
                "Arn"
              ]
            },
            "family": "helloFargateServiceTaskDefDC47C72D",
            "memory": "1024",
            "networkMode": "awsvpc",
            "requiresCompatibilities": [
              "FARGATE"
            ],
            "taskRoleArn": {
              "Fn::GetAtt": [
                "FargateServiceTaskDefTaskRole8CDCF85E",
                "Arn"
              ]
            },
            "volumes": [
              {
                "name": "shared",
                "efsVolumeConfiguration": {
                  "fileSystemId": {
                    "Ref": "helloefs8A45A9C7"
                  },
                  "authorizationConfig": {
                    "iam": "ENABLED",
                    "accessPointId": {
                      "Fn::GetAtt": [
                        "shared6AC20809",
                        "AccessPointId"
                      ]
                    }
                  },
                  "transitEncryption": "ENABLED"
                }
              }
            ]
          },
          "physicalResourceId": {
            "responsePath": "taskDefinition.taskDefinitionArn"
          },
          "service": "ECS"
        },
        "Update": {
          "action": "registerTaskDefinition",
          "outputPath": "taskDefinition.taskDefinitionArn",
          "parameters": {
            "containerDefinitions": [
              {
                "command": [
                  "--no-keys-panel",
                  "--one-file-panel",
                  "--port=80",
                  "--root=/files"
                ],
                "essential": "TRUE:BOOLEAN",
                "image": "coderaiser/cloudcmd:14.3.10-alpine",
                "logConfiguration": {
                  "logDriver": "awslogs",
                  "options": {
                    "awslogs-group": {
                      "Ref": "FargateServiceTaskDefwebLogGroup71FAF541"
                    },
                    "awslogs-stream-prefix": "FargateService",
                    "awslogs-region": {
                      "Ref": "AWS::Region"
                    }
                  }
                },
                "memory": 512,
                "mountPoints": [
                  {
                    "containerPath": "/shared",
                    "sourceVolume": "shared"
                  }
                ],
                "name": "web",
                "portMappings": [
                  {
                    "containerPort": 80,
                    "hostPort": 80,
                    "protocol": "tcp"
                  }
                ]
              }
            ],
            "cpu": "256",
            "executionRoleArn": {
              "Fn::GetAtt": [
                "FargateServiceTaskDefExecutionRole9194820E",
                "Arn"
              ]
            },
            "family": "helloFargateServiceTaskDefDC47C72D",
            "memory": "1024",
            "networkMode": "awsvpc",
            "requiresCompatibilities": [
              "FARGATE"
            ],
            "taskRoleArn": {
              "Fn::GetAtt": [
                "FargateServiceTaskDefTaskRole8CDCF85E",
                "Arn"
              ]
            },
            "volumes": [
              {
                "name": "shared",
                "efsVolumeConfiguration": {
                  "fileSystemId": {
                    "Ref": "helloefs8A45A9C7"
                  },
                  "authorizationConfig": {
                    "iam": "ENABLED",
                    "accessPointId": {
                      "Fn::GetAtt": [
                        "shared6AC20809",
                        "AccessPointId"
                      ]
                    }
                  },
                  "transitEncryption": "ENABLED"
                }
              }
            ]
          },
          "physicalResourceId": {
            "responsePath": "taskDefinition.taskDefinitionArn"
          },
          "service": "ECS"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "hello/FargateService/CustomFargateTaskDefinition/Resource/Default"
      }
    },
    "helloefspolicyE9255DCF": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "action": "putFileSystemPolicy",
          "parameters": {
            "FileSystemId": {
              "Ref": "helloefs8A45A9C7"
            },
            "Policy": {
              "Fn::Join": [
                "",
                [
                  "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"DisableRootAccessAndEnforceReadOnlyByDefault\",\"Effect\":\"Allow\",\"Action\":\"elasticfilesystem:ClientMount\",\"Principal\":{\"AWS\":\"*\"},\"Resource\":\"arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":elasticfilesystem:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":file-system/",
                  {
                    "Ref": "helloefs8A45A9C7"
                  },
                  "\"},{\"Sid\":\"EnforceInTransitEncryption\",\"Effect\":\"Deny\",\"Action\":[\"*\"],\"Principal\":{\"AWS\":\"*\"},\"Resource\":\"arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":elasticfilesystem:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":file-system/",
                  {
                    "Ref": "helloefs8A45A9C7"
                  },
                  "\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":false}}},{\"Sid\":\"EcsOnFargateCloudCmdTaskReadWriteAccess\",\"Effect\":\"Allow\",\"Action\":[\"elasticfilesystem:ClientMount\",\"elasticfilesystem:ClientWrite\"],\"Principal\":{\"AWS\":\"",
                  {
                    "Fn::GetAtt": [
                      "FargateServiceTaskDefTaskRole8CDCF85E",
                      "Arn"
                    ]
                  },
                  "\"},\"Resource\":\"arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":elasticfilesystem:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":file-system/",
                  {
                    "Ref": "helloefs8A45A9C7"
                  },
                  "\",\"Condition\":{\"StringEquals\":{\"elasticfilesystem:AccessPointArn\":[\"",
                  {
                    "Fn::GetAtt": [
                      "shared6AC20809",
                      "AccessPointArn"
                    ]
                  },
                  "\"]}}}]}"
                ]
              ]
            }
          },
          "physicalResourceId": {
            "responsePath": "FileSystemId"
          },
          "service": "EFS"
        },
        "Update": {
          "action": "putFileSystemPolicy",
          "parameters": {
            "FileSystemId": {
              "Ref": "helloefs8A45A9C7"
            },
            "Policy": {
              "Fn::Join": [
                "",
                [
                  "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"DisableRootAccessAndEnforceReadOnlyByDefault\",\"Effect\":\"Allow\",\"Action\":\"elasticfilesystem:ClientMount\",\"Principal\":{\"AWS\":\"*\"},\"Resource\":\"arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":elasticfilesystem:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":file-system/",
                  {
                    "Ref": "helloefs8A45A9C7"
                  },
                  "\"},{\"Sid\":\"EnforceInTransitEncryption\",\"Effect\":\"Deny\",\"Action\":[\"*\"],\"Principal\":{\"AWS\":\"*\"},\"Resource\":\"arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":elasticfilesystem:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":file-system/",
                  {
                    "Ref": "helloefs8A45A9C7"
                  },
                  "\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":false}}},{\"Sid\":\"EcsOnFargateCloudCmdTaskReadWriteAccess\",\"Effect\":\"Allow\",\"Action\":[\"elasticfilesystem:ClientMount\",\"elasticfilesystem:ClientWrite\"],\"Principal\":{\"AWS\":\"",
                  {
                    "Fn::GetAtt": [
                      "FargateServiceTaskDefTaskRole8CDCF85E",
                      "Arn"
                    ]
                  },
                  "\"},\"Resource\":\"arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":elasticfilesystem:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":file-system/",
                  {
                    "Ref": "helloefs8A45A9C7"
                  },
                  "\",\"Condition\":{\"StringEquals\":{\"elasticfilesystem:AccessPointArn\":[\"",
                  {
                    "Fn::GetAtt": [
                      "shared6AC20809",
                      "AccessPointArn"
                    ]
                  },
                  "\"]}}}]}"
                ]
              ]
            }
          },
          "physicalResourceId": {
            "responsePath": "FileSystemId"
          },
          "service": "EFS"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "hello/hello-efs-policy/Resource/Default"
      }
    }
  },
  "Parameters": {
    "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3BucketA67797D4": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50cc\""
    },
    "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccS3VersionKeyD2C3FB42": {
      "Type": "String",
      "Description": "S3 key for asset version \"f883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50cc\""
    },
    "AssetParametersf883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50ccArtifactHashA58B31E8": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f883e12689f8357ff04376b1abab555e2b18f9992e78242d504a2c4d74bb50cc\""
    }
  },
  "Outputs": {
    "FargateServiceLoadBalancerDNS9433D5F6": {
      "Value": {
        "Fn::GetAtt": [
          "FargateServiceLBB353E155",
          "DNSName"
        ]
      }
    },
    "FargateServiceServiceURL47701F45": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "FargateServiceLBB353E155",
                "DNSName"
              ]
            }
          ]
        ]
      }
    }
  }
}